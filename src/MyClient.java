
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.net.Socket;
import java.util.StringTokenizer;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author LENOVO
 */
public class MyClient extends javax.swing.JFrame {

    /**
     * Creates new form MyClient
     */
    DataInputStream _din ;
    DataOutputStream _dout ;
    DefaultListModel dlm;
    String id, clientId = "";
    String clientIdOldSeleced = "";
    File _ff;
    int sizeLimitFile = 1024 * 8;
    public MyClient() {
        initComponents();
    }
    MyClient(String i, Socket _socket) {
        id = i;
        try {
            initComponents();
            dlm = new DefaultListModel();
            txt_listUser.setModel(dlm);
            lb_userId.setText(i);
            _din = new DataInputStream(_socket.getInputStream());
            _dout = new DataOutputStream(_socket.getOutputStream());
            new Read().start();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    class Read extends Thread {
        public void run() {
            while (true) {
                try {
                    String str = _din.readUTF();
                    if (str.contains("key@@")) {
                        str = str.substring(5);
                        dlm.clear();
                        StringTokenizer _st = new StringTokenizer(str, ",");
                        while(_st.hasMoreTokens()) {
                            String strNextToken = _st.nextToken();
                            if(!id.equals(strNextToken)) {
                                dlm.addElement(strNextToken);
                            }
                        }
                    } else {
                        area_message_client.append(str + "\n");
                    }
                }
                catch (Exception e) {
                    break;
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lb_userId = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area_message_client = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_listUser = new javax.swing.JList<>();
        txt_message_client = new javax.swing.JTextField();
        btn_send_client = new javax.swing.JButton();
        btn_selectFile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        setTitle("Message Box");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Name: ");

        lb_userId.setText("........................");

        area_message_client.setEditable(false);
        area_message_client.setColumns(20);
        area_message_client.setRows(5);
        jScrollPane1.setViewportView(area_message_client);

        txt_listUser.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                txt_listUserValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(txt_listUser);

        btn_send_client.setText("Send >>");
        btn_send_client.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_send_clientActionPerformed(evt);
            }
        });

        btn_selectFile.setText("Select File");
        btn_selectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selectFileActionPerformed(evt);
            }
        });

        jLabel2.setText("List user");

        jLabel3.setText("File type: png, jpg, gif, txt, docx, xlsx, pdf");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(86, 86, 86)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_userId))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(btn_selectFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_message_client, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_send_client, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lb_userId)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_message_client, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_send_client, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_selectFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_send_clientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_send_clientActionPerformed
        // TODO add your handling code here:
        try {
            if(!txt_message_client.getText().isEmpty()) {
                String textSend = txt_message_client.getText(); 
                String _textSendCopy = textSend;
                String CI = clientId;
                if(!clientId.isEmpty()) {
                    System.out.println(clientIdOldSeleced);
                    System.out.println(clientId);
                    textSend = "1234@@@@"+CI+":"+_textSendCopy;
                    _dout.writeUTF(textSend);
                    txt_message_client.setText("");
                    area_message_client.append("<You to " +CI+ "> "+_textSendCopy+"\n");
                } else {
                    JOptionPane.showMessageDialog(this, "You not select user....\n");
                }
            }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(this, "User does not exits anymore..");
        }
    }//GEN-LAST:event_btn_send_clientActionPerformed

    private void txt_listUserValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_txt_listUserValueChanged
        // TODO add your handling code here:
        clientId = (String) txt_listUser.getSelectedValue();
    }//GEN-LAST:event_txt_listUserValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        String i = "closingclient";
        try{
            _dout.writeUTF(i);
            this.dispose();
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void btn_selectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selectFileActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter restrict = new FileNameExtensionFilter("File type","*.png", "*.jpg", "*.gif", "txt", "docx", "xlsx", "pdf"); 
        file.addChoosableFileFilter(restrict);
        int tamp = file.showOpenDialog(null);
        if(tamp == JFileChooser.APPROVE_OPTION) {
            char _buf[] = null;
            _ff = file.getSelectedFile();
            txt_message_client.setText(_ff.getName());
            
        }
    }//GEN-LAST:event_btn_selectFileActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MyClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MyClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MyClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MyClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MyClient().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area_message_client;
    private javax.swing.JButton btn_selectFile;
    private javax.swing.JButton btn_send_client;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb_userId;
    private javax.swing.JList<String> txt_listUser;
    private javax.swing.JTextField txt_message_client;
    // End of variables declaration//GEN-END:variables
}
